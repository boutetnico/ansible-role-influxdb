---
- name: Determine if TLS is used
  set_fact:
    _influxdb_protocol: "{{ 'https' if 'tls-cert' in influxdb_config and 'tls-key' in influxdb_config else 'http' }}"

- name: Ensure InfluxDB is up and running
  command: influx ping \
    --host "{{ _influxdb_protocol }}://localhost:8086"
  retries: 10
  delay: 5
  register: _ping
  until: _ping.rc == 0
  changed_when: false

- name: Set InfluxDB default user, organization, and bucket
  command: influx setup \
    --host "{{ _influxdb_protocol }}://localhost:8086" \
    --org {{ influxdb_primary_org }} \
    --bucket {{ influxdb_primary_bucket }} \
    --username {{ influxdb_primary_username }} \
    --password {{ influxdb_primary_password }} \
    --token {{ influxdb_admin_token }} \
    --force
  register: _setup
  failed_when:
    - _setup.rc != 0
    - '"has already been setup" not in _setup.stdout'
  changed_when: _setup.rc == 0

- name: Ensure organizations exist
  command: influx org create \
    --host "{{ _influxdb_protocol }}://localhost:8086" \
    --name "{{ item.name }}" \
    --description "{{ item.description | d('') }}"
  loop: "{{ influxdb_orgs }}"
  loop_control:
    label: "{{ item.name }}"
  register: _org
  failed_when:
    - _org.rc != 0
    - '"already exists" not in _org.stdout'
  changed_when: _org.rc == 0

- name: Ensure users exist
  command: influx user create \
    --host "{{ _influxdb_protocol }}://localhost:8086" \
    --name "{{ item.name }}" \
    --org "{{ item.org }}" \
    --password "{{ item.password }}"
  loop: "{{ influxdb_users }}"
  loop_control:
    label: "{{ item.name }}"
  register: _user
  failed_when:
    - _user.rc != 0
    - '"already exists" not in _user.stdout'
  changed_when: _user.rc == 0

- name: Ensure buckets exist
  command: influx bucket create \
    --host "{{ _influxdb_protocol }}://localhost:8086" \
    --name "{{ item.name }}" \
    --description "{{ item.description | d('') }}" \
    --org "{{ item.org }}" \
    --retention "{{ item.retention | d(0) }}"
  loop: "{{ influxdb_buckets }}"
  loop_control:
    label: "{{ item.name }}"
  register: _bucket
  failed_when:
    - _bucket.rc != 0
    - '"already exists" not in _bucket.stdout'
  changed_when: _bucket.rc == 0
